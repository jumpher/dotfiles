#!/bin/bash

PRONOUNCE_VERSION="1.1.0"

echo -e "\e[0;32m"
echo "The pronounce: Frontend for English Words Pronunciation"
echo "Copyright Â© 2013  Behnam Momeni"
echo "This program comes with ABSOLUTELY NO WARRANTY."
echo "This is free software, and you are welcome to redistribute it under"
echo "certain conditions. For details, see the LICENSE file."
echo -e "\e[0m"
echo "This frontend sends Web requests to Meriam Webster Online Dictionary"
echo "as its backend."
echo

function main {
	word="$1"
	number=$2
	check_cache_folder
	cd ~/.pronunciation.wavs/
	if [ -s "${word}-${number}.wav" ]; then
		echo "Pronunciation exists locally!";
	else
		echo "Downloading pronunciation";
		url=$(get_url $word $number)
		download $url ${word}-${number}.wav
	fi
	run_external_program ffplay ${word}-${number}.wav
}

function check_cache_folder {
	if [ ! -d ~/.pronunciation.wavs ]; then
		if [ -e ~/.pronunciation.wavs ]; then
			echo -e "\e[0;31m"
			echo "The pronounce program requires ~/pronunciation.wavs as a cache folder."
			echo "But that name is already used by a file!"
			echo "Please rename/remove/backup it and run pronounce again."
			echo -e "\e[0m"
			exit -1
		fi
		mkdir ~/.pronunciation.wavs
	fi
}

function get_url {
	word=$1
	number=$2
	url="$(printf "http://media.merriam-webster.com/soundc11/%.1s/%-6.6s%2s.wav" $word $word $number | sed 's/\ /0/g')"
	echo $url
}

function download {
	url=$1
	dest=$2
	run_external_program wget "$url" -O $dest
	if [ -s $dest ]; then
		echo "Downloaded."
	else
		rm $dest
		exit -1
	fi
}

function run_external_program {
	program=$1
	shift
	argument=$@
	if which $program >/dev/null 2>&1; then
		echo -e "Running: \e[1;34m $program $argument \e[0;0m"
		$program $argument
	else
		echo -e "\e[0;31m Program \"$program\" is not installed! \e[0m";
		exit -1
	fi

}

function print_usage {
	echo -e "Usage: \e[1;33m"
	echo -e "\t<word>          Plays 1st pronunciation of <word>"
	echo -e "\t<word> <num>    Plays <num>-th pronunciation of <word>"
	echo -e "\t<word> f        Opens definition page of <word> in Mozilla Firefox"
	echo -e "\t<word> w        Opens definition page of <word> in w3m command line browser"
	echo -e "\t-c              Purges the local audio files cache (rm -f)"
	echo -e "\t-v              Prints version"
	echo -e "\t-h              Prints this message"
	echo -e "\e[0m"
}
if [ "$1" = "-h" -o "a$1" = "a" ]; then
	print_usage
elif [ "$1" = "-c" ]; then
	echo "Purging the cache"
	rm -f ~/pronunciation.wavs/*
elif [ "$1" = "-v" ]; then
	echo "Version: $PRONOUNCE_VERSION"
elif [ "a$2" = "a" ]; then
	main $1 1
elif [ "$2" = "f" ]; then
	run_external_program firefox "http://www.merriam-webster.com/dictionary/$1#headword"
elif [ "$2" = "w" ]; then
	run_external_program w3m "http://www.merriam-webster.com/dictionary/$1#headword"
else
	main $1 $2
fi
